import Footer from "@/components/common/footer/footer";
import Layout from "@/components/common/layout/layout";
import { colors } from "@/constants/colors";
import { urls } from "@/constants/urls"
import { ActionIcon, Box, Button, Container, Group, Stack, Text } from "@mantine/core";
import { IconArrowLeft, IconShare, IconUser } from "@tabler/icons";
import axios from "axios"
import { GetStaticPaths, GetStaticProps, NextPage } from "next";
import Head from "next/head";
import { ReactMarkdown } from "react-markdown/lib/react-markdown";
import { footerData } from "@/constants/footer";


export const getStaticPaths: GetStaticPaths = async () => {
    try {
        const { data } = await axios.get(`${urls.strapiUrl}/blogs`);
        const slugs = data.data.map((blog: any) => blog.attributes.slug);
        const paths = slugs.map((slug: string) => ({
            params: { slug },
        }));
        return { paths, fallback: false };
    } catch (error) {
        console.log(error);
        return { paths: [], fallback: false };
    }
}

export const getStaticProps: GetStaticProps = async ({ params }) => {
    const slug = params?.slug;
    try {
        const { data } = await axios.get(
            `${urls.strapiUrl}/blogs?slug=${slug}&_limit=1&populate=*`
        );
        const filteredData = data.data.filter(
            (item: any) => item.attributes.slug === slug
        );
        if (filteredData.length > 0) {
            const blog = filteredData[0].attributes;
            return { props: { blog } };
        } else {
            return {
                notFound: true,
            };
        }
    } catch (error) {
        console.log(error);
        return {
            notFound: true,
        };
    }
}


const Blog: NextPage = (props: any) => {
    const parseDate = (input: string) => {
        return new Date(input).toLocaleDateString();
    }
    return (
        <>
            <Head>
                <title>{props.blog.title} | Raena Learning</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Layout>
                <Container>
                    <Group mb={30} position="apart">
                        <Button
                            component="a"
                            href="/blogs"
                            size="sm"
                            leftIcon={<IconArrowLeft />}
                            variant="outline"
                            color="dark"
                        >
                            All Blogs
                        </Button>
                        <ActionIcon>
                            <IconShare />
                        </ActionIcon>
                    </Group>
                    <Text fz={32} color={colors.secondaryColor}>{props.blog.title}</Text>
                    <Group>
                        <Text size="sm" color="dimmed">{parseDate(props.blog.publishedAt)}</Text>
                        <Text size="sm" color="dimmed">{props.blog.readDuration} min Read</Text>
                        <Box style={{display: "flex", gap: 5}}>
                            <IconUser size={14}/>
                            <Text size="sm" color="dimmed">{props.blog.author.data.attributes.firstName} {props.blog.author.data.attributes.lastName}</Text>
                        </Box>
                    </Group>
                    <ReactMarkdown
                        children={props.blog.content}
                    />
                </Container>

                <Footer data={footerData} />
            </Layout>
        </>
    )
}

export default Blog;